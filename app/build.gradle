buildscript {
    ext {
        kotlinx_coroutines_version = "0.13"
        spek_version = '1.1.0'
        dagger_version = "2.15"
        rx_version = "2.0.3"
        rx_android_version = "2.0.2"
        leak_canary_version = "1.5"
        butterkinfe_version = "8.4.0"
        support_version = "26.0.1"
        target_sdk_version = 26
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

//Kotlin
kotlin {
    experimental {
        coroutines "enable"
    }
}

//Android
android {
    compileSdkVersion target_sdk_version
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.minivac.mini"
        minSdkVersion 21
        targetSdkVersion target_sdk_version
        versionCode 1
        multiDexEnabled true
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility "1.7"
        targetCompatibility "1.7"
    }

    lintOptions {
        abortOnError false
    }

    configurations.all {
        //This is library is included with two different versions
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":mini-common")
    kapt project(":mini-processor")

    //Support
    implementation "com.android.support:appcompat-v7:$support_version"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"

    //Dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$rx_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    //Networking
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'

    //Debug
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    //Test
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.natpryce:hamkrest:1.4.2.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation 'org.junit.platform:junit-platform-runner:1.0.1'
    testImplementation("org.jetbrains.spek:spek-api:$spek_version") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation("org.jetbrains.spek:spek-junit-platform-engine:$spek_version") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}


